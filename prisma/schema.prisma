generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Language {
  code  String @id @db.VarChar(8)
  title String @db.VarChar(64)

  @@map("languages")
}

model Category {
  id          Int              @id @default(autoincrement())
  parentId    Int?
  title       String
  slug        String
  createdAt   DateTime         @default(now())
  description String?          @db.Text
  keywords    Json?
  parent      Category?        @relation("CategoryChildren", fields: [parentId], references: [id])
  children    Category[]       @relation("CategoryChildren")
  recipes     RecipeCategory[]

  @@unique([parentId, slug])
  @@index([parentId])
  @@index([slug])
  @@map("categories")
}

model Tag {
  id        Int             @id @default(autoincrement())
  name      String          @db.VarChar(255)
  createdAt DateTime        @default(now()) @map("created_at")
  slug      String          @unique @map("slug") @db.VarChar(255)
  recipes   RecipeTagLink[]

  @@map("tags")
}

model RecipeTagLink {
  recipeId Int
  tagId    Int
  recipe   Recipe @relation(fields: [recipeId], references: [id], onDelete: Cascade)
  tag      Tag    @relation(fields: [tagId], references: [id], onDelete: Cascade)

  @@id([recipeId, tagId])
  @@index([tagId], map: "recipe_tag_link_tagId_fkey")
  @@map("recipe_tag_links")
}

model Ingredient {
  id                BigInt             @id @default(autoincrement())
  name              String
  slug              String             @unique @db.VarChar(255)
  createdAt         DateTime           @default(now())
  recipeIngredients RecipeIngredient[]

  @@map("ingredients")
}

model Recipe {
  id          Int                @id @default(autoincrement())
  slug        String             @unique @db.VarChar(255)
  title       String             @db.VarChar(255)
  description String?            @db.LongText
  createdAt   DateTime           @default(now())
  updatedAt   DateTime           @updatedAt
  seo         String?            @db.VarChar(255)
  categories  RecipeCategory[]
  ingredients RecipeIngredient[]
  tags        RecipeTagLink[]

  @@map("recipes")
}

model RecipeIngredient {
  id           BigInt      @id @default(autoincrement())
  recipeId     Int         @map("recipe_id")
  ingredientId BigInt?     @map("ingredient_id")
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @updatedAt
  text         String      @db.VarChar(255)
  source       source      @default(DOM)
  ingredient   Ingredient? @relation(fields: [ingredientId], references: [id])
  recipe       Recipe      @relation(fields: [recipeId], references: [id], onDelete: Cascade)

  @@index([ingredientId], map: "recipe_ingredient_ingredient_id_fkey")
  @@index([recipeId], map: "recipe_ingredient_recipe_id_fkey")
  @@map("recipe_ingredients")
}

model RecipeCategory {
  recipeId   Int
  categoryId Int
  category   Category @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  recipe     Recipe   @relation(fields: [recipeId], references: [id], onDelete: Cascade)

  @@id([recipeId, categoryId])
  @@index([categoryId, recipeId])
  @@map("recipe_categories")
}

model Phrase {
  id        BigInt   @id @default(autoincrement())
  sourceId  Int      @map("source_id")
  type      String   @default("default") @db.VarChar(32)
  text      String   @db.LongText
  version   String   @default("default") @db.VarChar(32)
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  hash      String   @default("") @db.VarChar(64)

  @@unique([sourceId, hash, version])
  @@unique([type, sourceId, version])
  @@map("phrases")
}

model Source {
  id           Int           @id @default(autoincrement()) @map("id")
  recipeUrl    String        @map("recipe_url")
  recipeDate   DateTime?     @map("recipe_date")
  htmlContent  String?       @map("html_content") @db.LongText
  jsonParsed   Json?         @map("json_parsed")
  jsonAltered  Json?         @map("json_altered")
  createdAt    DateTime      @default(now()) @map("created_at")
  updatedAt    DateTime      @default(now()) @updatedAt @map("updated_at")
  sourceImages SourceImage[]

  @@map("sources")
}

model SourceImage {
  id         Int      @id @default(autoincrement()) @map("id")
  sourceId   Int?     @map("source_id")
  stableId   String?  @map("stable_id") @db.Char(40)
  url        String?  @map("url") @db.Text
  alt        String?  @map("alt") @db.VarChar(1024)
  isLead     Boolean  @default(false) @map("is_lead")
  order      Int      @default(0) @map("order")
  downloaded Boolean  @default(false)
  createdAt  DateTime @default(now()) @map("created_at")
  updatedAt  DateTime @default(now()) @updatedAt @map("updated_at")
  source     Source?  @relation(fields: [sourceId], references: [id])

  @@unique([sourceId, stableId])
  @@index([sourceId])
  @@index([order], map: "idx_recipe_images_step_order")
  @@map("source_images")
}

enum source {
  DOM
  TEXT
  GPT
  OLLAMA
}
